print('\t\t\t\t\tКРЕСТИКИ-НОЛИКИ')

#Компьтер играет в крестики-нолики против пользователя
#Глобаные константы
X = "X"
O = "O"
EMPTY = ""
TIE = "Ничья"
NUM_SQUEARES = 9

#Инструкция
def display_instruct():
    print(
    """
    Чтобы сделать ход, введи число от 0 до 8.Числа соответвуют полям доски:
    0|1|2
    -----
    3|4|5
    -----
    6|7|8
    """)
#Вопрос с ответом "да" либо "нет"
def ask_yes_no(question):
    response = None
    while response not in ('y', 'n'):
        response = input(question).lower()
    return response

#Ввод числа
def ask_number(question,low,high):
    response = None
    while response not in range(low,high):
        response = int(input(question))
    return response

#Определение очерёдности хода
def pieces():
    """Определяет фишки игроков"""
    go_first = ask_yes_no('Хотите ходить первым? (y/n)').lower()
    if go_first == 'y':
        human, computer = O, X
        print('\nНу что ж, даю тебе фору. Играй крестиками.')
    else:
        human, computer = X, O
        print('\nТы сам обрек себя на это!')
    return human, computer

#Новая игровая доска
def new_board():
    board = []
    for square in range(NUM_SQUEARES):
        board.append(EMPTY)
    return board

#Вывод доски на экран
def display_board(board):
    print("\n\t", board[0], " | ", board[1], "| ", board[2])
    print("\t", "---------")
    print("\n\t" , board[3], " | ", board[4], "| ", board[5])
    print("\t", "---------")
    print("\n\t" , board[6], " | ", board[7], "| ", board[8], "\n")

#Доступные ходы
def legal_moves(board):
    moves = []
    for square in range(NUM_SQUEARES):
        if board[square] == EMPTY:
            moves.append(square)
    return moves

#Возможные победители
def winner(board):
    WAYS_TO_WIN = ((0, 1, 2),
                   (3, 4, 5),
                   (6, 7, 8),
                   (0, 3, 6),
                   (1, 4, 7),
                   (2, 5, 8),
                   (0, 4, 8),
                   (2, 4, 6))
    for row in WAYS_TO_WIN:
        if board[row[0]] == board[row[1]] == board[row[2]] != EMPTY:
            winner = board[row[0]]
            return winner
        if EMPTY not in board:
            return TIE
    return None

#Ход человека
def human_move(board,human):
    legal = legal_moves(board)
    move = None
    while move not in legal:
        move = ask_number("Ваш ход. Выберите одно из полей (0-8):\n ------------>", 0, NUM_SQUEARES)
        if move not in legal:
            print("Хэй!Это поле уже занято. Дурак что-ли? Выбери другое.\n")
    print("Нууу...")
    return move

#Ход компьютера
def computer_move(board,computer,human):
    board = board[:]
    BEST_MOVES = (4,0,2,6,8,1,3,5,7)
    print("Я выберу поле номер", end=" ")
    for move in legal_moves(board):
        board[move] = computer
        if winner(board) == computer:
            print(move)
            return move
        board[move] = EMPTY
    for move in legal_moves(board):
        board[move] = human
        if winner(board) == human:
            print(move)
            return move
        board[move] = EMPTY
    for move in BEST_MOVES:
        if move in legal_moves(board):
            print(move)
            return move

#Переход хода
def next_turn(turn):
    if turn == X:
        return O
    else:
        return X

#Поздравление победителя
def congrat_winner(the_winner, computer, human):
    if the_winner != TIE:
        print("Три", the_winner, "в ряд!\n")
    else:
        print("Ничья!\n")
    if the_winner == computer:
        print("ХАХАХАХХАХАХАХАХАХАХХАХАХАХАХА,я тебя победил. Скоро я завоюю весь мир. Ха-ха-ха!!!")
    elif the_winner == human:
        print("ДА КАК? ВСМ! ПОШЁЛ ТЫ! ТЫ ЖУЛНИЧАЕШЬ! АААААААААААААААААА! \n Больше я этого не допущу!")
    elif the_winner == TIE:
        print("Ну, тебе повезло. Живи пока.")

def again():
    want = input('Хотите еще раз сыграть? ')
    if want == '+':
        main()
    return want

#Основная часть
def main():
    display_instruct()
    computer, human = pieces()
    turn = X
    board = new_board()
    display_board(board)
    while not winner(board):
        if turn == human:
            move = human_move(board,human)
            board[move] = human
        else:
            move = computer_move(board,computer, human)
            board[move] = computer
        display_board(board)
        turn = next_turn(turn)
    the_winner = winner(board)
    congrat_winner(the_winner,computer, human)
    again()

main()

    
    
     


    
    

    
    
     

